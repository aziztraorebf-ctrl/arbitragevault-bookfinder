FEATURE: Dynamic Business Configuration System

Complete implementation of dynamic business configuration with hierarchical overrides, 
preview system, and immediate effect on all calculations.

## Database & Models
- BusinessConfig table with hierarchical scopes (global/domain/category)
- ConfigChange audit trail with JSONPatch diffs
- Migration with default configuration seed
- Optimistic concurrency control with versioning

## Services & Core Logic  
- BusinessConfigService: thread-safe cache, deep merge hierarchy
- ConfigPreviewService: dry-run testing with demo ASINs
- Full integration into calculations.py and fees_config.py
- Zero hardcoded business constants - all configurable

## API Endpoints
- GET /api/v1/config - effective config with overrides
- PUT /api/v1/config - atomic updates with If-Match headers
- POST /api/v1/config/preview - dry-run with before/after comparison
- GET /api/v1/config/changes - audit trail
- GET /api/v1/config/health - service monitoring

## Validation & Testing
- Pydantic schemas with business rule validation
- Combined score weights must sum to 1.0
- ROI/buffer/threshold range validation
- Comprehensive smoke tests validate end-to-end impact

## Features Delivered
âœ… Hierarchical config: global < domain < category
âœ… Thread-safe caching with TTL invalidation
âœ… JSONPatch diff generation for audit
âœ… Preview system with 3 demo ASINs
âœ… All calculations now use dynamic config
âœ… Immediate effect - no redeploy needed
âœ… Optimistic concurrency with version control

Tests:
âœ… Configuration service (6 tests passed)
âœ… Integration tests (5 end-to-end scenarios)
âœ… Different business strategies produce different outcomes
âœ… ROI targets, profit tiers, velocity thresholds all configurable
âœ… Combined scoring weights and recommendation rules work

ðŸ¤– Generated with [Memex](https://memex.tech)  
Co-Authored-By: Memex <noreply@memex.tech>