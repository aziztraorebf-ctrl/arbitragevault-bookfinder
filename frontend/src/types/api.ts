/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
    "/api/v1/health/live": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Liveness Check
         * @description Liveness probe - check if application is running.
         *
         *     Returns:
         *         200: Application is alive
         */
        get: operations["liveness_check_api_v1_health_live_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/health/ready": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Readiness Check
         * @description Readiness probe - check if application is ready to serve traffic.
         *
         *     Returns:
         *         200: Application is ready (database connected)
         *         503: Application is not ready (database issues)
         */
        get: operations["readiness_check_api_v1_health_ready_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/auth/register": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * Register
         * @description Register a new user.
         *
         *     This endpoint will be implemented in Cycle 1.3 with full authentication logic.
         */
        post: operations["register_api_v1_auth_register_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/auth/login": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * Login
         * @description Login with email/password and get JWT tokens.
         *
         *     This endpoint will be implemented in Cycle 1.3 with full authentication logic.
         */
        post: operations["login_api_v1_auth_login_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/auth/refresh": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * Refresh Token
         * @description Refresh access token using refresh token.
         *
         *     This endpoint will be implemented in Cycle 1.3 with full authentication logic.
         */
        post: operations["refresh_token_api_v1_auth_refresh_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/auth/logout": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * Logout
         * @description Logout and invalidate refresh token.
         *
         *     This endpoint will be implemented in Cycle 1.3 with full authentication logic.
         */
        post: operations["logout_api_v1_auth_logout_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/auth/me": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get Current User Info
         * @description Get current authenticated user information.
         *
         *     This endpoint will be fully implemented in Cycle 1.3.
         *     For now, returns a placeholder to test the authentication dependency.
         */
        get: operations["get_current_user_info_api_v1_auth_me_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/analyses": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * List Analyses
         * @description Get paginated list of analyses with optional filtering from database.
         *
         *     Now connected to real AnalysisRepository with filtering capabilities.
         */
        get: operations["list_analyses_api_v1_analyses_get"];
        put?: never;
        /**
         * Create Analysis
         * @description Create a new analysis record in database.
         *
         *     Now connected to real repository with data persistence.
         */
        post: operations["create_analysis_api_v1_analyses_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/analyses/top": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get Top Analyses
         * @description Get top N analyses from a batch using specified ranking strategy from database.
         *
         *     Now connected to real repository with intelligent sorting.
         */
        get: operations["get_top_analyses_api_v1_analyses_top_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/batches": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * List Batches
         * @description Get paginated list of analysis batches from database.
         *
         *     Now connected to real BatchRepository with database persistence.
         */
        get: operations["list_batches_api_v1_batches_get"];
        put?: never;
        /**
         * Create Batch
         * @description Create a new analysis batch in database.
         */
        post: operations["create_batch_api_v1_batches_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/batches/{batch_id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get Batch
         * @description Get a specific batch by ID.
         */
        get: operations["get_batch_api_v1_batches__batch_id__get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/batches/{batch_id}/status": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        /**
         * Update Batch Status
         * @description Update batch status with validation.
         */
        patch: operations["update_batch_status_api_v1_batches__batch_id__status_patch"];
        trace?: never;
    };
    "/api/v1/keepa/ingest": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * Ingest Batch
         * @description Ingest batch of identifiers for analysis.
         *     Supports both sync and async processing based on batch size.
         */
        post: operations["ingest_batch_api_v1_keepa_ingest_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/keepa/{asin}/metrics": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get Product Metrics
         * @description Get complete analysis metrics for a product.
         *     Includes ROI, velocity, configuration audit, and Keepa metadata.
         */
        get: operations["get_product_metrics_api_v1_keepa__asin__metrics_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/keepa/{asin}/raw": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get Raw Keepa Data
         * @description Get raw Keepa data for debugging and transparency.
         *     Returns unprocessed data directly from Keepa API.
         */
        get: operations["get_raw_keepa_data_api_v1_keepa__asin__raw_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/keepa/debug-analyze": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * Debug Analyze Endpoint
         * @description DEBUG ENDPOINT: Trace every step of analyze_product to find the exact error.
         */
        post: operations["debug_analyze_endpoint_api_v1_keepa_debug_analyze_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/keepa/health": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Keepa Health Check
         * @description Enhanced health check with observability metrics.
         *     Includes token status, cache performance, and service metrics.
         */
        get: operations["keepa_health_check_api_v1_keepa_health_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/keepa/test": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Test Keepa Connection
         * @description Test Keepa API connection with given identifier.
         *     Enhanced for Phase 4 with better error handling and tracing.
         */
        get: operations["test_keepa_connection_api_v1_keepa_test_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/config/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get Effective Config
         * @description Get effective business configuration with hierarchical merging.
         *
         *     Returns merged configuration: global < domain < category
         */
        get: operations["get_effective_config_api_v1_config__get"];
        /**
         * Update Config
         * @description Update business configuration with optimistic concurrency control.
         *
         *     Supports partial updates (patches) and version checking.
         */
        put: operations["update_config_api_v1_config__put"];
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/config/preview": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * Preview Config
         * @description Preview configuration changes without applying them.
         *
         *     Tests changes against demo ASINs and shows before/after comparison.
         */
        post: operations["preview_config_api_v1_config_preview_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/config/changes": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get Config Changes
         * @description Get configuration change history (audit trail).
         *
         *     Returns recent configuration changes with diffs and metadata.
         */
        get: operations["get_config_changes_api_v1_config_changes_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/config/stats": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get Config Stats
         * @description Get configuration service statistics and health info.
         *
         *     Useful for monitoring cache performance and service health.
         */
        get: operations["get_config_stats_api_v1_config_stats_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/config/health": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Config Service Health
         * @description Basic health check for configuration service.
         */
        get: operations["config_service_health_api_v1_config_health_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/autosourcing/run-custom": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * Run Custom Search
         * @description Run custom AutoSourcing search with user-defined criteria.
         *
         *     This endpoint orchestrates the complete discovery pipeline:
         *     1. Product discovery via Keepa Product Finder
         *     2. Advanced scoring with v1.5.0 system
         *     3. Filtering and ranking by user criteria
         *     4. Duplicate removal and result optimization
         */
        post: operations["run_custom_search_api_v1_autosourcing_run_custom_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/autosourcing/latest": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get Latest Results
         * @description Get results from the most recent successful AutoSourcing job.
         */
        get: operations["get_latest_results_api_v1_autosourcing_latest_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/autosourcing/opportunity-of-day": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get Opportunity Of Day
         * @description Get the best opportunity discovered today across all jobs.
         */
        get: operations["get_opportunity_of_day_api_v1_autosourcing_opportunity_of_day_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/autosourcing/jobs": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get Recent Jobs
         * @description Get list of recent AutoSourcing jobs with summary info.
         */
        get: operations["get_recent_jobs_api_v1_autosourcing_jobs_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/autosourcing/jobs/{job_id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get Job Details
         * @description Get detailed results for a specific AutoSourcing job.
         */
        get: operations["get_job_details_api_v1_autosourcing_jobs__job_id__get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/autosourcing/profiles": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get Saved Profiles
         * @description Get all saved AutoSourcing profiles.
         */
        get: operations["get_saved_profiles_api_v1_autosourcing_profiles_get"];
        put?: never;
        /**
         * Create Profile
         * @description Create a new AutoSourcing profile for reuse.
         */
        post: operations["create_profile_api_v1_autosourcing_profiles_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/autosourcing/picks/{pick_id}/action": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        /**
         * Update Pick Action
         * @description Update user action on a discovered product pick.
         */
        put: operations["update_pick_action_api_v1_autosourcing_picks__pick_id__action_put"];
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/autosourcing/my-actions/{action}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get Picks By Action
         * @description Get all picks filtered by user action (to_buy, favorite, ignored, etc).
         */
        get: operations["get_picks_by_action_api_v1_autosourcing_my_actions__action__get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/autosourcing/to-buy": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get To Buy List
         * @description Get all products marked for purchase - convenience endpoint.
         */
        get: operations["get_to_buy_list_api_v1_autosourcing_to_buy_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/autosourcing/favorites": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get Favorites
         * @description Get all favorite products - convenience endpoint.
         */
        get: operations["get_favorites_api_v1_autosourcing_favorites_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/autosourcing/stats": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get Action Stats
         * @description Get user action statistics and insights.
         */
        get: operations["get_action_stats_api_v1_autosourcing_stats_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/autosourcing/jobs/{job_id}/tiers": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get Job Products By Tier
         * @description Retourne les produits d'un job organisés par tiers de priorité.
         *     Nouveau système de classification pour AutoScheduler.
         */
        get: operations["get_job_products_by_tier_api_v1_autosourcing_jobs__job_id__tiers_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/autosourcing/health": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Autosourcing Health
         * @description Health check for AutoSourcing module.
         */
        get: operations["autosourcing_health_api_v1_autosourcing_health_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/autoscheduler/status": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get Autoscheduler Status
         * @description Obtient le statut actuel de l'AutoScheduler
         */
        get: operations["get_autoscheduler_status_api_v1_autoscheduler_status_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/autoscheduler/enable": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * Enable Autoscheduler
         * @description Active l'AutoScheduler
         */
        post: operations["enable_autoscheduler_api_v1_autoscheduler_enable_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/autoscheduler/disable": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * Disable Autoscheduler
         * @description Désactive l'AutoScheduler
         */
        post: operations["disable_autoscheduler_api_v1_autoscheduler_disable_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/autoscheduler/pause": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * Pause Autoscheduler
         * @description Met en pause l'AutoScheduler jusqu'à une date donnée
         */
        post: operations["pause_autoscheduler_api_v1_autoscheduler_pause_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/autoscheduler/pause-today": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * Pause Autoscheduler Today
         * @description Met en pause l'AutoScheduler pour aujourd'hui seulement
         */
        post: operations["pause_autoscheduler_today_api_v1_autoscheduler_pause_today_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/autoscheduler/schedule": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        /**
         * Update Schedule
         * @description Met à jour les heures d'exécution de l'AutoScheduler
         */
        put: operations["update_schedule_api_v1_autoscheduler_schedule_put"];
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/autoscheduler/metrics": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get Autoscheduler Metrics
         * @description Obtient les métriques quotidiennes de l'AutoScheduler
         */
        get: operations["get_autoscheduler_metrics_api_v1_autoscheduler_metrics_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/autoscheduler/health": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Autoscheduler Health
         * @description Health check pour le module AutoScheduler
         */
        get: operations["autoscheduler_health_api_v1_autoscheduler_health_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/products/{asin}/stock-estimate": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get Stock Estimate
         * @description Get stock availability estimate for a single ASIN
         *
         *     Returns cached result if available and not expired (24h TTL),
         *     otherwise fetches fresh data from Keepa API.
         *
         *     Args:
         *         asin: Amazon ASIN identifier
         *         price_target: Optional target price for filtering offers in price range
         *
         *     Returns:
         *         Stock estimate with FBA/MFN offer counts and availability estimate
         */
        get: operations["get_stock_estimate_api_v1_products__asin__stock_estimate_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/products/stock-estimate/health": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Stock Estimate Health
         * @description Health check endpoint for stock estimate service
         */
        get: operations["stock_estimate_health_api_v1_products_stock_estimate_health_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/views/{view_type}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get Strategic View
         * @description Get strategic view of products with velocity-enhanced analysis
         *
         *     Enrichit les données produit avec estimations de ventes et les trie selon la vue choisie
         */
        get: operations["get_strategic_view_api_v1_views__view_type__get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/views/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * List Available Views
         * @description List all available strategic views with descriptions
         */
        get: operations["list_available_views_api_v1_views__get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/views/{view_type}/target-prices": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get Strategic View With Target Prices
         * @description Get strategic view with target price calculations for each product.
         *
         *     This endpoint enriches product analysis with target selling prices based on
         *     strategic view ROI targets and provides achievability assessment.
         */
        get: operations["get_strategic_view_with_target_prices_api_v1_views__view_type__target_prices_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/niche-discovery/analyze": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * Analyze Niches
         * @description Analyse les niches de marché selon les critères fournis.
         *
         *     - **criteria**: Critères d'analyse (BSR, vendeurs, marge, etc.)
         *     - **target_categories**: Catégories spécifiques à analyser (optionnel)
         *     - **max_results**: Nombre maximum de niches à retourner (défaut: 10)
         *
         *     Returns:
         *         - Liste des niches découvertes avec scores et métriques
         *         - Statistiques d'analyse
         *         - Recommandations pour AutoSourcing
         */
        post: operations["analyze_niches_api_niche_discovery_analyze_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/niche-discovery/categories": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get Available Categories
         * @description Retourne les catégories disponibles pour l'analyse de niches.
         *
         *     Returns:
         *         - Liste des catégories éligibles
         *         - Catégories recommandées pour débuter
         *         - Statistiques globales
         */
        get: operations["get_available_categories_api_niche_discovery_categories_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/niche-discovery/export/csv": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * Export Niches Csv
         * @description Exporte les niches découvertes au format CSV.
         *
         *     - **discovered_niches**: Liste des niches à exporter (format JSON)
         *
         *     Returns:
         *         - Fichier CSV téléchargeable
         *         - Headers optimisés pour Excel
         */
        post: operations["export_niches_csv_api_niche_discovery_export_csv_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/niche-discovery/stats": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get Service Stats
         * @description Retourne les statistiques du service Niche Discovery.
         *
         *     Returns:
         *         - Configuration système
         *         - Métriques cache
         *         - Informations sur l'algorithme de scoring
         */
        get: operations["get_service_stats_api_niche_discovery_stats_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/bookmarks/niches": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * List Saved Niches
         * @description Get all saved niches for the current user.
         *
         *     Returns a paginated list of the user's bookmarked niches, ordered by
         *     creation date (newest first).
         */
        get: operations["list_saved_niches_api_bookmarks_niches_get"];
        put?: never;
        /**
         * Create Saved Niche
         * @description Create a new saved niche for the current user.
         *
         *     This endpoint allows users to bookmark discovered niches with their analysis
         *     parameters for later re-use.
         */
        post: operations["create_saved_niche_api_bookmarks_niches_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/bookmarks/niches/{niche_id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get Saved Niche
         * @description Get a specific saved niche by ID.
         *
         *     Returns the complete details of a saved niche including all analysis
         *     parameters for potential re-analysis.
         */
        get: operations["get_saved_niche_api_bookmarks_niches__niche_id__get"];
        /**
         * Update Saved Niche
         * @description Update an existing saved niche.
         *
         *     Allows users to modify the name, description, or analysis parameters
         *     of their saved niches.
         */
        put: operations["update_saved_niche_api_bookmarks_niches__niche_id__put"];
        post?: never;
        /**
         * Delete Saved Niche
         * @description Delete a saved niche.
         *
         *     Permanently removes a bookmarked niche from the user's saved collection.
         *     This action cannot be undone.
         */
        delete: operations["delete_saved_niche_api_bookmarks_niches__niche_id__delete"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/bookmarks/niches/{niche_id}/filters": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get Niche Analysis Filters
         * @description Get the analysis filters from a saved niche for re-running analysis.
         *
         *     This endpoint is useful for the "Relancer l'analyse" functionality,
         *     returning the exact parameters used when the niche was discovered.
         */
        get: operations["get_niche_analysis_filters_api_bookmarks_niches__niche_id__filters_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
}
export type webhooks = Record<string, never>;
export interface components {
    schemas: {
        /**
         * ActionStatus
         * @description User action taken on a discovered product.
         * @enum {string}
         */
        ActionStatus: "pending" | "to_buy" | "favorite" | "ignored" | "analyzing";
        /**
         * AnalysisCreate
         * @description Schema for creating new analysis.
         */
        AnalysisCreate: {
            /**
             * Batch Id
             * @description ID of the batch this analysis belongs to
             */
            batch_id: string;
            /**
             * Isbn Or Asin
             * @description ISBN/ASIN of the book
             */
            isbn_or_asin: string;
            /**
             * Buy Price
             * @description Buy price
             */
            buy_price: number | string;
            /**
             * Fees
             * @description Amazon fees
             */
            fees: number | string;
            /**
             * Expected Sale Price
             * @description Expected sale price
             */
            expected_sale_price: number | string;
            /**
             * Profit
             * @description Calculated profit
             */
            profit: number | string;
            /**
             * Roi Percent
             * @description ROI percentage
             */
            roi_percent: number | string;
            /**
             * Velocity Score
             * @description Velocity score 0-1
             */
            velocity_score: number | string;
            /**
             * Rank Snapshot
             * @description Amazon sales rank snapshot
             */
            rank_snapshot?: number | null;
            /**
             * Offers Count
             * @description Number of offers
             */
            offers_count?: number | null;
            /**
             * Raw Keepa
             * @description Raw Keepa API data
             */
            raw_keepa?: {
                [key: string]: unknown;
            } | null;
        };
        /**
         * AnalysisResponse
         * @description Schema for analysis responses.
         */
        AnalysisResponse: {
            /** Id */
            id: string;
            /** Batch Id */
            batch_id: string;
            /** Isbn Or Asin */
            isbn_or_asin: string;
            /** Buy Price */
            buy_price: string;
            /** Fees */
            fees: string;
            /** Expected Sale Price */
            expected_sale_price: string;
            /** Profit */
            profit: string;
            /** Roi Percent */
            roi_percent: string;
            /** Velocity Score */
            velocity_score: string;
            /** Rank Snapshot */
            rank_snapshot: number | null;
            /** Offers Count */
            offers_count: number | null;
            /**
             * Target Price Data
             * @description Target price calculation data
             */
            target_price_data?: {
                [key: string]: unknown;
            } | null;
            /**
             * Created At
             * Format: date-time
             */
            created_at: string;
            /**
             * Updated At
             * Format: date-time
             */
            updated_at: string;
        };
        /**
         * AnalysisResult
         * @description Complete analysis result for a product.
         */
        AnalysisResult: {
            /** Asin */
            asin: string;
            /** Title */
            title: string | null;
            /** Roi */
            roi: {
                [key: string]: unknown;
            };
            /** Velocity */
            velocity: {
                [key: string]: unknown;
            };
            /**
             * Velocity Score
             * @description Velocity score 0-100
             */
            velocity_score: number;
            /**
             * Price Stability Score
             * @description Price stability score 0-100
             */
            price_stability_score: number;
            /**
             * Confidence Score
             * @description Data confidence score 0-100
             */
            confidence_score: number;
            /**
             * Overall Rating
             * @description EXCELLENT/GOOD/FAIR/PASS
             */
            overall_rating: string;
            /**
             * Score Breakdown
             * @description Detailed score breakdown
             */
            score_breakdown: {
                [key: string]: components["schemas"]["ScoreBreakdown"];
            };
            /**
             * Readable Summary
             * @description Human-readable summary
             */
            readable_summary: string;
            /** Recommendation */
            recommendation: string;
            /** Risk Factors */
            risk_factors: string[];
        };
        /** AutoSchedulerStatus */
        AutoSchedulerStatus: {
            /** Enabled */
            enabled: boolean;
            /** Next Run Hour */
            next_run_hour?: number | null;
            /** Scheduled Hours */
            scheduled_hours: number[];
            /** Pause Until */
            pause_until?: string | null;
            /**
             * Skip Dates
             * @default []
             */
            skip_dates: string[];
            /** Current Date */
            current_date: string;
            /** Time Until Next Run */
            time_until_next_run?: string | null;
        };
        /**
         * AutoSourcingJobResponse
         * @description Response model for AutoSourcing job.
         */
        AutoSourcingJobResponse: {
            /**
             * Id
             * Format: uuid
             */
            id: string;
            /** Profile Name */
            profile_name: string;
            /**
             * Launched At
             * Format: date-time
             */
            launched_at: string;
            /** Completed At */
            completed_at: string | null;
            /** Duration Ms */
            duration_ms: number | null;
            status: components["schemas"]["JobStatus"];
            /** Total Tested */
            total_tested: number;
            /** Total Selected */
            total_selected: number;
            /**
             * Picks
             * @default []
             */
            picks: components["schemas"]["AutoSourcingPickResponse"][];
        };
        /**
         * AutoSourcingPickResponse
         * @description Response model for AutoSourcing pick.
         */
        AutoSourcingPickResponse: {
            /**
             * Id
             * Format: uuid
             */
            id: string;
            /** Asin */
            asin: string;
            /** Title */
            title: string;
            /** Current Price */
            current_price: number | null;
            /** Roi Percentage */
            roi_percentage: number;
            /** Velocity Score */
            velocity_score: number;
            /** Stability Score */
            stability_score: number;
            /** Confidence Score */
            confidence_score: number;
            /** Overall Rating */
            overall_rating: string;
            /** Readable Summary */
            readable_summary: string | null;
            /** Bsr */
            bsr: number | null;
            /** Category */
            category: string | null;
            action_status: components["schemas"]["ActionStatus"];
            /** Action Taken At */
            action_taken_at: string | null;
            /** Is Purchased */
            is_purchased: boolean;
            /** Is Favorite */
            is_favorite: boolean;
            /** Is Ignored */
            is_ignored: boolean;
            /**
             * Created At
             * Format: date-time
             */
            created_at: string;
        };
        /**
         * BatchCreateRequest
         * @description Schema for creating new batches.
         */
        BatchCreateRequest: {
            /**
             * Name
             * @description Name for the batch
             */
            name: string;
            /**
             * Description
             * @description Optional batch description
             */
            description?: string | null;
            /**
             * Asin List
             * @description List of ISBN/ASIN codes to process
             */
            asin_list: string[];
            /**
             * Config Name
             * @description Strategy configuration name
             */
            config_name: string;
        };
        /**
         * BatchResponse
         * @description Schema for batch responses.
         */
        BatchResponse: {
            /** Id */
            id: string;
            /** Name */
            name: string;
            /** Description */
            description?: string | null;
            /** Status */
            status: string;
            /** Items Total */
            items_total?: number | null;
            /** Items Processed */
            items_processed?: number | null;
            /** Started At */
            started_at?: string | null;
            /** Finished At */
            finished_at?: string | null;
            /** Strategy Snapshot */
            strategy_snapshot?: {
                [key: string]: unknown;
            } | null;
            /**
             * Created At
             * Format: date-time
             */
            created_at: string;
            /**
             * Updated At
             * Format: date-time
             */
            updated_at: string;
        };
        /**
         * BatchResult
         * @description Result for a single item in batch processing.
         */
        BatchResult: {
            /** Identifier */
            identifier: string;
            /** Asin */
            asin: string | null;
            /** Status */
            status: string;
            analysis: components["schemas"]["AnalysisResult"] | null;
            /** Error */
            error: string | null;
        };
        /**
         * BatchStatusUpdate
         * @description Schema for updating batch status.
         */
        BatchStatusUpdate: {
            /**
             * Status
             * @description New batch status
             */
            status: string;
            /**
             * Error Message
             * @description Error message if status is FAILED
             */
            error_message?: string | null;
        };
        /** Body_login_api_v1_auth_login_post */
        Body_login_api_v1_auth_login_post: {
            /** Grant Type */
            grant_type?: string | null;
            /** Username */
            username: string;
            /** Password */
            password: string;
            /**
             * Scope
             * @default
             */
            scope: string;
            /** Client Id */
            client_id?: string | null;
            /** Client Secret */
            client_secret?: string | null;
        };
        /**
         * BusinessConfigResponse
         * @description Response schema for config retrieval.
         */
        BusinessConfigResponse: {
            /**
             * Scope
             * @description Configuration scope
             */
            scope: string;
            /** @description Configuration data */
            config: components["schemas"]["BusinessConfigSchema-Output"];
            /**
             * Version
             * @description Configuration version
             */
            version: number;
            /** @description Effective merged config */
            effective_config?: components["schemas"]["BusinessConfigSchema-Output"] | null;
            /**
             * Sources
             * @description Config source flags
             */
            sources?: {
                [key: string]: boolean;
            } | null;
            /**
             * Updated At
             * Format: date-time
             * @description Last update timestamp
             */
            updated_at: string;
        };
        /**
         * BusinessConfigSchema
         * @description Complete business configuration schema.
         */
        "BusinessConfigSchema-Input": {
            roi?: components["schemas"]["RoiConfigSchema"] | null;
            combined_score?: components["schemas"]["CombinedScoreConfigSchema"] | null;
            fees?: components["schemas"]["FeesConfigSchema"] | null;
            velocity?: components["schemas"]["VelocityConfigSchema"] | null;
            /** Recommendation Rules */
            recommendation_rules?: components["schemas"]["RecommendationRuleSchema"][] | null;
            /**
             * Demo Asins
             * @description Demo ASINs for preview testing
             */
            demo_asins?: string[] | null;
            meta?: components["schemas"]["MetaConfigSchema"] | null;
        } & {
            [key: string]: unknown;
        };
        /**
         * BusinessConfigSchema
         * @description Complete business configuration schema.
         */
        "BusinessConfigSchema-Output": {
            roi?: components["schemas"]["RoiConfigSchema"] | null;
            combined_score?: components["schemas"]["CombinedScoreConfigSchema"] | null;
            fees?: components["schemas"]["FeesConfigSchema"] | null;
            velocity?: components["schemas"]["VelocityConfigSchema"] | null;
            /** Recommendation Rules */
            recommendation_rules?: components["schemas"]["RecommendationRuleSchema"][] | null;
            /**
             * Demo Asins
             * @description Demo ASINs for preview testing
             */
            demo_asins?: string[] | null;
            meta?: components["schemas"]["MetaConfigSchema"] | null;
        } & {
            [key: string]: unknown;
        };
        /**
         * CategoriesListResponse
         * @description Liste des catégories disponibles pour analyse.
         */
        CategoriesListResponse: {
            /**
             * Categories
             * @description Catégories disponibles
             */
            categories: components["schemas"]["CategoryOverview"][];
            /**
             * Total Eligible
             * @description Nombre de catégories éligibles
             */
            total_eligible: number;
            /**
             * Recommended Categories
             * @description Catégories recommandées pour débuter
             */
            recommended_categories: components["schemas"]["CategoryOverview"][];
        };
        /**
         * CategoryOverview
         * @description Aperçu d'une catégorie Keepa.
         */
        CategoryOverview: {
            /**
             * Category Id
             * @description ID catégorie Keepa
             */
            category_id: number;
            /**
             * Category Name
             * @description Nom de la catégorie
             */
            category_name: string;
            /**
             * Parent Category
             * @description Catégorie parente
             */
            parent_category: string | null;
            /**
             * Estimated Products
             * @description Nombre estimé de produits
             */
            estimated_products: number | null;
            /**
             * Last Analyzed
             * @description Dernière analyse
             */
            last_analyzed: string | null;
            /**
             * Is Eligible
             * @description Éligible pour analyse niche
             */
            is_eligible: boolean;
        };
        /**
         * CombinedScoreConfigSchema
         * @description Combined score weighting configuration.
         */
        CombinedScoreConfigSchema: {
            /**
             * Roi Weight
             * @description ROI weight in combined score
             * @default 0.6
             */
            roi_weight: number;
            /**
             * Velocity Weight
             * @description Velocity weight in combined score
             * @default 0.4
             */
            velocity_weight: number;
        };
        /**
         * ConfigAudit
         * @description Configuration audit information.
         */
        ConfigAudit: {
            /** Version */
            version: string;
            /** Hash */
            hash: string;
            /** Profile */
            profile: string;
            /**
             * Effective At
             * Format: date-time
             */
            effective_at: string;
            /**
             * Changes Applied
             * @default []
             */
            changes_applied: {
                [key: string]: unknown;
            }[];
        };
        /**
         * ConfigChangeResponse
         * @description Response schema for config changes (audit trail).
         */
        ConfigChangeResponse: {
            /**
             * Change Id
             * @description Unique change ID
             */
            change_id: string;
            /**
             * Config Scope
             * @description Scope that was changed
             */
            config_scope: string;
            /**
             * Changed By
             * @description User who made the change
             */
            changed_by: string;
            /**
             * Change Reason
             * @description Reason for change
             */
            change_reason?: string | null;
            /**
             * Change Source
             * @description Source of change (api, system, etc.)
             */
            change_source: string;
            /**
             * Old Version
             * @description Previous version
             */
            old_version?: number | null;
            /**
             * New Version
             * @description New version after change
             */
            new_version: number;
            /**
             * Diff Summary
             * @description Human-readable change summary
             */
            diff_summary: string;
            /**
             * Diff Jsonpatch
             * @description JSONPatch diff
             */
            diff_jsonpatch: {
                [key: string]: unknown;
            }[];
            /**
             * Changed At
             * Format: date-time
             * @description When change was made
             */
            changed_at: string;
        };
        /**
         * ConfigPreviewRequest
         * @description Request schema for config preview (dry-run).
         */
        ConfigPreviewRequest: {
            /** @description Configuration to preview */
            config_patch: components["schemas"]["BusinessConfigSchema-Input"];
            /**
             * Domain Id
             * @description Domain ID for preview context
             * @default 1
             */
            domain_id: number;
            /**
             * Category
             * @description Category for preview context
             * @default books
             */
            category: string;
        };
        /**
         * ConfigPreviewResponse
         * @description Response schema for config preview.
         */
        ConfigPreviewResponse: {
            /**
             * Preview Results
             * @description Preview results for demo ASINs
             */
            preview_results: components["schemas"]["PreviewResult"][];
            /**
             * Config Summary
             * @description Summary of configuration changes
             */
            config_summary: {
                [key: string]: unknown;
            };
            /**
             * Validation Warnings
             * @description Validation warnings (non-blocking)
             * @default []
             */
            validation_warnings: string[];
            /**
             * Generated At
             * Format: date-time
             * @description Preview generation timestamp
             */
            generated_at?: string;
        };
        /**
         * ConfigStatsResponse
         * @description Response schema for config service statistics.
         */
        ConfigStatsResponse: {
            /**
             * Cache Stats
             * @description Cache performance statistics
             */
            cache_stats: {
                [key: string]: unknown;
            };
            /**
             * Total Configs
             * @description Total number of configurations
             */
            total_configs: number;
            /**
             * Active Configs
             * @description Number of active configurations
             */
            active_configs: number;
            /**
             * Recent Changes
             * @description Number of recent changes
             */
            recent_changes: number;
            /**
             * Service Health
             * @description Service health status
             */
            service_health: string;
        };
        /**
         * ConfigUpdateRequest
         * @description Request schema for config updates.
         */
        ConfigUpdateRequest: {
            /** @description Configuration changes to apply */
            config_patch: components["schemas"]["BusinessConfigSchema-Input"];
            /**
             * Change Reason
             * @description Reason for configuration change
             */
            change_reason?: string | null;
            /**
             * If Match Version
             * @description Expected version for optimistic locking
             */
            if_match_version?: number | null;
        };
        /**
         * CreateProfileRequest
         * @description Request to create a new saved profile.
         */
        CreateProfileRequest: {
            /** Name */
            name: string;
            /** Description */
            description?: string | null;
            discovery_config: components["schemas"]["DiscoveryConfig"];
            scoring_config: components["schemas"]["ScoringConfig"];
            /**
             * Max Results
             * @default 20
             */
            max_results: number;
        };
        /**
         * DiscoveredNiche
         * @description Niche découverte avec métriques et score.
         */
        DiscoveredNiche: {
            /**
             * Category Name
             * @description Nom lisible de la catégorie
             */
            category_name: string;
            /**
             * Category Id
             * @description ID catégorie Keepa
             */
            category_id: number;
            /** @description Métriques calculées */
            metrics: components["schemas"]["NicheMetrics"];
            /**
             * Niche Score
             * @description Score global (1-10)
             */
            niche_score: number;
            /**
             * Confidence Level
             * @description Niveau confiance (High/Medium/Low)
             */
            confidence_level: string;
            /**
             * Sample Quality
             * @description Qualité échantillon données
             */
            sample_quality: string;
            /**
             * Analysis Timestamp
             * Format: date-time
             */
            analysis_timestamp?: string;
            /** @description Critères utilisés pour l'analyse */
            criteria_used: components["schemas"]["NicheAnalysisCriteria"];
        };
        /**
         * DiscoveryConfig
         * @description Configuration for product discovery via Keepa.
         */
        DiscoveryConfig: {
            /**
             * Categories
             * @description Product categories to search
             */
            categories: string[];
            /**
             * Bsr Range
             * @description BSR range [min, max]
             */
            bsr_range?: number[] | null;
            /**
             * Price Range
             * @description Price range [min, max]
             */
            price_range?: number[] | null;
            /**
             * Discount Min
             * @description Minimum discount percentage
             */
            discount_min?: number | null;
            /**
             * Availability
             * @description Availability filter
             * @default amazon
             */
            availability: string | null;
            /**
             * Max Results
             * @description Maximum results to discover
             * @default 50
             */
            max_results: number | null;
        };
        /**
         * FeeConfigItemSchema
         * @description Fee configuration for a specific category.
         */
        FeeConfigItemSchema: {
            /**
             * Referral Fee Pct
             * @description Referral fee percentage
             * @default 15
             */
            referral_fee_pct: number;
            /**
             * Closing Fee
             * @description Fixed closing fee
             * @default 1.8
             */
            closing_fee: number;
            /**
             * Fba Fee Base
             * @description Base FBA fee
             * @default 2.5
             */
            fba_fee_base: number;
            /**
             * Fba Fee Per Lb
             * @description FBA fee per pound
             * @default 0.4
             */
            fba_fee_per_lb: number;
            /**
             * Inbound Shipping
             * @description Inbound shipping cost
             * @default 0.4
             */
            inbound_shipping: number;
            /**
             * Prep Fee
             * @description Prep fee per item
             * @default 0.2
             */
            prep_fee: number;
        };
        /**
         * FeesConfigSchema
         * @description Fees configuration with category-specific settings.
         */
        FeesConfigSchema: {
            /**
             * Buffer Pct Default
             * @description Safety buffer percentage
             * @default 5
             */
            buffer_pct_default: number;
            books?: components["schemas"]["FeeConfigItemSchema"] | null;
            media?: components["schemas"]["FeeConfigItemSchema"] | null;
            default?: components["schemas"]["FeeConfigItemSchema"] | null;
        };
        /** HTTPValidationError */
        HTTPValidationError: {
            /** Detail */
            detail?: components["schemas"]["ValidationError"][];
        };
        /**
         * IngestBatchRequest
         * @description Request for batch ingestion of identifiers.
         */
        IngestBatchRequest: {
            /**
             * Identifiers
             * @description List of ASINs/ISBNs
             */
            identifiers: string[];
            /**
             * Batch Id
             * @description Optional batch ID for idempotency
             */
            batch_id?: string | null;
            /**
             * Config Profile
             * @description Configuration profile to use
             * @default default
             */
            config_profile: string;
            /**
             * Force Refresh
             * @description Force refresh cached data
             * @default false
             */
            force_refresh: boolean;
            /**
             * Async Threshold
             * @description Use async job mode if > this many items
             * @default 100
             */
            async_threshold: number;
        };
        /**
         * IngestResponse
         * @description Response for batch ingestion.
         */
        IngestResponse: {
            /** Batch Id */
            batch_id: string;
            /** Total Items */
            total_items: number;
            /** Processed */
            processed: number;
            /** Successful */
            successful: number;
            /** Failed */
            failed: number;
            /** Results */
            results: components["schemas"]["BatchResult"][];
            /** Job Id */
            job_id?: string | null;
            /** Status Url */
            status_url?: string | null;
            /** Trace Id */
            trace_id: string;
        };
        /**
         * JobStatus
         * @description Status of an AutoSourcing job execution.
         * @enum {string}
         */
        JobStatus: "pending" | "running" | "success" | "error" | "cancelled";
        /**
         * KeepaMetadata
         * @description Keepa API metadata.
         */
        KeepaMetadata: {
            /**
             * Snapshot At
             * Format: date-time
             */
            snapshot_at: string;
            /** Cache Hit */
            cache_hit: boolean;
            /** Tokens Used */
            tokens_used: number;
            /** Tokens Remaining */
            tokens_remaining: number | null;
            /** Data Freshness Hours */
            data_freshness_hours: number | null;
        };
        /**
         * MetaConfigSchema
         * @description Configuration metadata.
         */
        MetaConfigSchema: {
            /**
             * Version
             * @description Configuration version
             */
            version?: string | null;
            /**
             * Created By
             * @description Configuration creator
             */
            created_by?: string | null;
            /**
             * Description
             * @description Configuration description
             */
            description?: string | null;
        };
        /**
         * MetricsResponse
         * @description Response for product metrics endpoint.
         */
        MetricsResponse: {
            /** Asin */
            asin: string;
            analysis: components["schemas"]["AnalysisResult"];
            config_audit: components["schemas"]["ConfigAudit"];
            keepa_metadata: components["schemas"]["KeepaMetadata"];
            /** Trace Id */
            trace_id: string;
        };
        /**
         * NicheAnalysisCriteria
         * @description Critères d'analyse pour la découverte de niches.
         */
        NicheAnalysisCriteria: {
            /**
             * Bsr Range
             * @description Plage BSR optimale (min, max)
             * @default [
             *       10000,
             *       50000
             *     ]
             */
            bsr_range: [
                number,
                number
            ];
            /**
             * Max Sellers
             * @description Nombre maximum de vendeurs par produit
             * @default 3
             */
            max_sellers: number;
            /**
             * Min Margin Percent
             * @description Marge profit minimum en pourcentage
             * @default 30
             */
            min_margin_percent: number;
            /**
             * Min Price Stability
             * @description Stabilité prix minimum (0-1)
             * @default 0.75
             */
            min_price_stability: number;
            /**
             * Sample Size
             * @description Taille échantillon produits par catégorie
             * @default 100
             */
            sample_size: number;
        };
        /**
         * NicheAnalysisRequest
         * @description Requête d'analyse de niches.
         */
        NicheAnalysisRequest: {
            criteria?: components["schemas"]["NicheAnalysisCriteria"];
            /**
             * Target Categories
             * @description Catégories spécifiques à analyser (optionnel)
             */
            target_categories?: number[] | null;
            /**
             * Max Results
             * @description Nombre maximum de niches à retourner
             * @default 10
             */
            max_results: number;
        };
        /**
         * NicheAnalysisResponse
         * @description Réponse d'analyse de niches.
         */
        NicheAnalysisResponse: {
            /**
             * Discovered Niches
             * @description Niches découvertes
             */
            discovered_niches: components["schemas"]["DiscoveredNiche"][];
            /**
             * Total Categories Analyzed
             * @description Nombre de catégories analysées
             */
            total_categories_analyzed: number;
            /**
             * Analysis Duration Seconds
             * @description Durée de l'analyse
             */
            analysis_duration_seconds: number;
            /** @description Critères appliqués */
            criteria_used: components["schemas"]["NicheAnalysisCriteria"];
            /**
             * Avg Niche Score
             * @description Score moyen des niches trouvées
             */
            avg_niche_score: number;
            /**
             * Best Niche Score
             * @description Meilleur score trouvé
             */
            best_niche_score: number;
            /**
             * Analysis Quality
             * @description Qualité globale de l'analyse
             */
            analysis_quality: string;
        };
        /**
         * NicheCreateSchema
         * @description Schema for creating a new saved niche.
         * @example {
         *       "category_id": 13,
         *       "category_name": "Engineering & Transportation",
         *       "description": "High-margin engineering textbooks with good rotation",
         *       "filters": {
         *         "max_bsr": 500000,
         *         "max_price": 200,
         *         "min_price": 20,
         *         "min_roi": 30
         *       },
         *       "last_score": 7.4,
         *       "niche_name": "Engineering Textbooks"
         *     }
         */
        NicheCreateSchema: {
            /**
             * Niche Name
             * @description User-defined name for the niche
             */
            niche_name: string;
            /**
             * Category Id
             * @description Keepa category ID used for discovery
             */
            category_id?: number | null;
            /**
             * Category Name
             * @description Human-readable category name
             */
            category_name?: string | null;
            /**
             * Filters
             * @description Analysis parameters and filters used
             */
            filters?: {
                [key: string]: unknown;
            };
            /**
             * Last Score
             * @description Last calculated niche score
             */
            last_score?: number | null;
            /**
             * Description
             * @description Optional user notes about the niche
             */
            description?: string | null;
        };
        /**
         * NicheListResponseSchema
         * @description Schema for listing user's saved niches.
         * @example {
         *       "niches": [
         *         {
         *           "category_id": 13,
         *           "category_name": "Engineering & Transportation",
         *           "created_at": "2024-01-15T10:30:00Z",
         *           "description": "High-margin textbooks",
         *           "filters": {
         *             "max_price": 200,
         *             "min_price": 20
         *           },
         *           "id": "123e4567-e89b-12d3-a456-426614174000",
         *           "last_score": 7.4,
         *           "niche_name": "Engineering Textbooks",
         *           "updated_at": "2024-01-15T10:30:00Z"
         *         }
         *       ],
         *       "total_count": 1
         *     }
         */
        NicheListResponseSchema: {
            /**
             * Niches
             * @description List of saved niches
             */
            niches: components["schemas"]["NicheReadSchema"][];
            /**
             * Total Count
             * @description Total number of saved niches
             */
            total_count: number;
        };
        /**
         * NicheMetrics
         * @description Métriques calculées pour une niche.
         */
        NicheMetrics: {
            /**
             * Avg Sellers
             * @description Nombre moyen de vendeurs
             */
            avg_sellers: number;
            /**
             * Avg Bsr
             * @description BSR moyen
             */
            avg_bsr: number;
            /**
             * Avg Price
             * @description Prix moyen en dollars
             */
            avg_price: number;
            /**
             * Price Stability
             * @description Stabilité prix (0-1)
             */
            price_stability: number;
            /**
             * Profit Margin
             * @description Marge profit moyenne (%)
             */
            profit_margin: number;
            /**
             * Total Products
             * @description Nombre total de produits analysés
             */
            total_products: number;
            /**
             * Viable Products
             * @description Produits viables selon critères
             */
            viable_products: number;
            /**
             * Competition Level
             * @description Niveau concurrence (Low/Medium/High)
             */
            competition_level: string;
        };
        /**
         * NicheReadSchema
         * @description Schema for reading saved niche data.
         * @example {
         *       "category_id": 13,
         *       "category_name": "Engineering & Transportation",
         *       "created_at": "2024-01-15T10:30:00Z",
         *       "description": "High-margin engineering textbooks",
         *       "filters": {
         *         "max_bsr": 500000,
         *         "max_price": 200,
         *         "min_price": 20,
         *         "min_roi": 30
         *       },
         *       "id": "123e4567-e89b-12d3-a456-426614174000",
         *       "last_score": 7.4,
         *       "niche_name": "Engineering Textbooks",
         *       "updated_at": "2024-01-15T10:30:00Z"
         *     }
         */
        NicheReadSchema: {
            /**
             * Id
             * @description Unique niche ID
             */
            id: string;
            /**
             * Niche Name
             * @description User-defined niche name
             */
            niche_name: string;
            /**
             * Category Id
             * @description Keepa category ID
             */
            category_id?: number | null;
            /**
             * Category Name
             * @description Category name
             */
            category_name?: string | null;
            /**
             * Filters
             * @description Analysis parameters
             */
            filters: {
                [key: string]: unknown;
            };
            /**
             * Last Score
             * @description Last niche score
             */
            last_score?: number | null;
            /**
             * Description
             * @description User notes
             */
            description?: string | null;
            /**
             * Created At
             * Format: date-time
             * @description Creation timestamp
             */
            created_at: string;
            /**
             * Updated At
             * Format: date-time
             * @description Last update timestamp
             */
            updated_at: string;
        };
        /**
         * NicheUpdateSchema
         * @description Schema for updating an existing saved niche.
         * @example {
         *       "description": "Updated description with new insights",
         *       "filters": {
         *         "max_bsr": 400000,
         *         "max_price": 250,
         *         "min_price": 25,
         *         "min_roi": 35
         *       },
         *       "niche_name": "Updated Engineering Textbooks"
         *     }
         */
        NicheUpdateSchema: {
            /**
             * Niche Name
             * @description Updated niche name
             */
            niche_name?: string | null;
            /**
             * Description
             * @description Updated description
             */
            description?: string | null;
            /**
             * Filters
             * @description Updated analysis parameters
             */
            filters?: {
                [key: string]: unknown;
            } | null;
        };
        /**
         * OpportunityOfDayResponse
         * @description Response model for daily opportunity.
         */
        OpportunityOfDayResponse: {
            pick: components["schemas"]["AutoSourcingPickResponse"];
            /** Job Profile */
            job_profile: string;
            /**
             * Found At
             * Format: date-time
             */
            found_at: string;
            /** Message */
            message: string;
        };
        /** PaginatedResponse[AnalysisResponse] */
        PaginatedResponse_AnalysisResponse_: {
            /**
             * Items
             * @description List of items in this page
             */
            items: components["schemas"]["AnalysisResponse"][];
            /**
             * Total
             * @description Total number of items across all pages
             */
            total: number;
            /**
             * Page
             * @description Current page number
             */
            page: number;
            /**
             * Per Page
             * @description Items per page
             */
            per_page: number;
            /**
             * Pages
             * @description Total number of pages
             */
            pages: number;
        };
        /** PaginatedResponse[BatchResponse] */
        PaginatedResponse_BatchResponse_: {
            /**
             * Items
             * @description List of items in this page
             */
            items: components["schemas"]["BatchResponse"][];
            /**
             * Total
             * @description Total number of items across all pages
             */
            total: number;
            /**
             * Page
             * @description Current page number
             */
            page: number;
            /**
             * Per Page
             * @description Items per page
             */
            per_page: number;
            /**
             * Pages
             * @description Total number of pages
             */
            pages: number;
        };
        /** PauseRequest */
        PauseRequest: {
            /**
             * Pause Until
             * @description Date jusqu'à laquelle pauser (YYYY-MM-DD)
             */
            pause_until: string;
            /**
             * Reason
             * @description Raison de la pause
             */
            reason?: string | null;
        };
        /**
         * PreviewResult
         * @description Single ASIN preview result.
         */
        PreviewResult: {
            /**
             * Asin
             * @description Product ASIN
             */
            asin: string;
            /**
             * Title
             * @description Product title
             */
            title?: string | null;
            /**
             * Before
             * @description Metrics with current config
             */
            before: {
                [key: string]: unknown;
            };
            /**
             * After
             * @description Metrics with new config
             */
            after: {
                [key: string]: unknown;
            };
            /**
             * Changes
             * @description Summary of key changes
             */
            changes: {
                [key: string]: unknown;
            };
        };
        /**
         * RecommendationRuleSchema
         * @description Single recommendation rule.
         */
        RecommendationRuleSchema: {
            /**
             * Label
             * @description Recommendation label (STRONG BUY, BUY, etc.)
             */
            label: string;
            /**
             * Min Roi
             * @description Minimum ROI for this recommendation
             * @default 0
             */
            min_roi: number;
            /**
             * Min Velocity
             * @description Minimum velocity for this recommendation
             * @default 0
             */
            min_velocity: number;
            /**
             * Description
             * @description Human-readable description
             */
            description?: string | null;
        };
        /**
         * RoiConfigSchema
         * @description ROI configuration parameters.
         */
        RoiConfigSchema: {
            /**
             * Target Pct Default
             * @description Default ROI target percentage
             * @default 30
             */
            target_pct_default: number;
            /**
             * Min For Buy
             * @description Minimum ROI for BUY recommendation
             * @default 15
             */
            min_for_buy: number;
            /**
             * Excellent Threshold
             * @description ROI threshold for excellent tier
             * @default 50
             */
            excellent_threshold: number;
            /**
             * Good Threshold
             * @description ROI threshold for good tier
             * @default 30
             */
            good_threshold: number;
            /**
             * Fair Threshold
             * @description ROI threshold for fair tier
             * @default 15
             */
            fair_threshold: number;
        };
        /**
         * RunCustomSearchRequest
         * @description Request to run custom AutoSourcing search.
         */
        RunCustomSearchRequest: {
            /**
             * Profile Name
             * @description Name for this search
             */
            profile_name: string;
            discovery_config: components["schemas"]["DiscoveryConfig"];
            scoring_config: components["schemas"]["ScoringConfig"];
            /**
             * Profile Id
             * @description Optional saved profile ID
             */
            profile_id?: string | null;
        };
        /**
         * SavedProfileResponse
         * @description Response model for saved profile.
         */
        SavedProfileResponse: {
            /**
             * Id
             * Format: uuid
             */
            id: string;
            /** Name */
            name: string;
            /** Description */
            description: string | null;
            /** Discovery Config */
            discovery_config: {
                [key: string]: unknown;
            };
            /** Scoring Config */
            scoring_config: {
                [key: string]: unknown;
            };
            /** Max Results */
            max_results: number;
            /** Active */
            active: boolean;
            /** Last Used At */
            last_used_at: string | null;
            /** Usage Count */
            usage_count: number;
            /**
             * Created At
             * Format: date-time
             */
            created_at: string;
        };
        /** ScheduleUpdateRequest */
        ScheduleUpdateRequest: {
            /**
             * Hours
             * @description Nouvelles heures d'exécution
             */
            hours: number[];
        };
        /**
         * ScoreBreakdown
         * @description Breakdown of individual score calculation.
         */
        ScoreBreakdown: {
            /** Score */
            score: number;
            /** Raw */
            raw: number;
            /** Level */
            level: string;
            /** Notes */
            notes: string;
        };
        /**
         * ScoringConfig
         * @description Configuration for advanced scoring thresholds.
         */
        ScoringConfig: {
            /**
             * Roi Min
             * @description Minimum ROI percentage
             * @default 30
             */
            roi_min: number;
            /**
             * Velocity Min
             * @description Minimum velocity score
             * @default 70
             */
            velocity_min: number;
            /**
             * Stability Min
             * @description Minimum stability score
             * @default 70
             */
            stability_min: number;
            /**
             * Confidence Min
             * @description Minimum confidence score
             * @default 70
             */
            confidence_min: number;
            /**
             * Rating Required
             * @description Minimum overall rating
             * @default GOOD
             */
            rating_required: string;
            /**
             * Max Results
             * @description Maximum picks to return
             * @default 20
             */
            max_results: number | null;
        };
        /**
         * StrategicViewResponseSchema
         * @description Schema for strategic view responses with target prices.
         */
        StrategicViewResponseSchema: {
            /**
             * View Name
             * @description Strategic view name
             */
            view_name: string;
            /**
             * Description
             * @description View description
             */
            description: string;
            /**
             * Roi Target
             * @description ROI target for this view
             */
            roi_target: number;
            /**
             * Products Count
             * @description Number of products analyzed
             */
            products_count: number;
            /**
             * Products
             * @description Enriched product data with target prices
             */
            products: {
                [key: string]: unknown;
            }[];
            /** @description Summary statistics */
            summary: components["schemas"]["StrategicViewSummarySchema"];
        };
        /**
         * StrategicViewSummarySchema
         * @description Schema for strategic view summary statistics.
         */
        StrategicViewSummarySchema: {
            /**
             * Total Products
             * @description Total number of products analyzed
             */
            total_products: number;
            /**
             * Achievable Opportunities
             * @description Number of achievable opportunities
             */
            achievable_opportunities: number;
            /**
             * Achievable Percentage
             * @description Percentage of achievable opportunities
             */
            achievable_percentage: number;
            /**
             * Avg Target Price
             * @description Average target price
             */
            avg_target_price: number;
            /**
             * Avg Strategic Score
             * @description Average strategic score
             */
            avg_strategic_score: number;
            /**
             * Total Potential Profit
             * @description Total potential profit
             */
            total_potential_profit: number;
        };
        /**
         * TopAnalysisStrategy
         * @description Strategy for ranking top analyses.
         * @enum {string}
         */
        TopAnalysisStrategy: "roi" | "velocity" | "balanced";
        /**
         * UpdateActionRequest
         * @description Request to update pick action.
         */
        UpdateActionRequest: {
            /** @description Action to take */
            action: components["schemas"]["ActionStatus"];
            /** Notes */
            notes?: string | null;
        };
        /** ValidationError */
        ValidationError: {
            /** Location */
            loc: (string | number)[];
            /** Message */
            msg: string;
            /** Error Type */
            type: string;
        };
        /**
         * VelocityConfigSchema
         * @description Velocity scoring configuration.
         */
        VelocityConfigSchema: {
            /**
             * Fast Threshold
             * @description Threshold for fast velocity tier
             * @default 80
             */
            fast_threshold: number;
            /**
             * Medium Threshold
             * @description Threshold for medium velocity tier
             * @default 60
             */
            medium_threshold: number;
            /**
             * Slow Threshold
             * @description Threshold for slow velocity tier
             * @default 40
             */
            slow_threshold: number;
            /**
             * Benchmarks
             * @description BSR benchmarks by category
             */
            benchmarks?: {
                [key: string]: number;
            } | null;
        };
        /**
         * ViewType
         * @description Types de vues stratégiques disponibles
         * @enum {string}
         */
        ViewType: "profit-hunter" | "velocity" | "cashflow-hunter" | "volume-player" | "balanced-score";
    };
    responses: never;
    parameters: never;
    requestBodies: never;
    headers: never;
    pathItems: never;
}
export type $defs = Record<string, never>;
export interface operations {
    liveness_check_api_v1_health_live_get: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
        };
    };
    readiness_check_api_v1_health_ready_get: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
        };
    };
    register_api_v1_auth_register_post: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
        };
    };
    login_api_v1_auth_login_post: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/x-www-form-urlencoded": components["schemas"]["Body_login_api_v1_auth_login_post"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    refresh_token_api_v1_auth_refresh_post: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
        };
    };
    logout_api_v1_auth_logout_post: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
        };
    };
    get_current_user_info_api_v1_auth_me_get: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
        };
    };
    list_analyses_api_v1_analyses_get: {
        parameters: {
            query?: {
                /** @description Filter by batch ID */
                batch_id?: string | null;
                /** @description Minimum ROI percentage */
                min_roi?: number | null;
                /** @description Maximum ROI percentage */
                max_roi?: number | null;
                /** @description Minimum velocity score */
                min_velocity?: number | null;
                /** @description Maximum velocity score */
                max_velocity?: number | null;
                /** @description Page number */
                page?: number;
                /** @description Items per page */
                per_page?: number;
                /** @description Sort by field */
                sort_by?: string;
                /** @description Sort order */
                sort_order?: string;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["PaginatedResponse_AnalysisResponse_"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    create_analysis_api_v1_analyses_post: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["AnalysisCreate"];
            };
        };
        responses: {
            /** @description Successful Response */
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["AnalysisResponse"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_top_analyses_api_v1_analyses_top_get: {
        parameters: {
            query: {
                /** @description Batch ID to get top analyses from */
                batch_id: string;
                /** @description Strategy for ranking: roi, velocity, or balanced */
                strategy?: components["schemas"]["TopAnalysisStrategy"];
                /** @description Number of top analyses to return */
                limit?: number;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["AnalysisResponse"][];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    list_batches_api_v1_batches_get: {
        parameters: {
            query?: {
                /** @description Page number */
                page?: number;
                /** @description Items per page */
                per_page?: number;
                /** @description Sort by field */
                sort_by?: string;
                /** @description Sort order */
                sort_order?: string;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["PaginatedResponse_BatchResponse_"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    create_batch_api_v1_batches_post: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["BatchCreateRequest"];
            };
        };
        responses: {
            /** @description Successful Response */
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["BatchResponse"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_batch_api_v1_batches__batch_id__get: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description Batch ID */
                batch_id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["BatchResponse"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    update_batch_status_api_v1_batches__batch_id__status_patch: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description Batch ID */
                batch_id: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["BatchStatusUpdate"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["BatchResponse"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    ingest_batch_api_v1_keepa_ingest_post: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["IngestBatchRequest"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["IngestResponse"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_product_metrics_api_v1_keepa__asin__metrics_get: {
        parameters: {
            query?: {
                /** @description Configuration profile */
                config_profile?: string;
                /** @description Force refresh cached data */
                force_refresh?: boolean;
            };
            header?: never;
            path: {
                asin: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["MetricsResponse"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_raw_keepa_data_api_v1_keepa__asin__raw_get: {
        parameters: {
            query?: {
                /** @description Force refresh cached data */
                force_refresh?: boolean;
            };
            header?: never;
            path: {
                asin: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        [key: string]: unknown;
                    };
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    debug_analyze_endpoint_api_v1_keepa_debug_analyze_post: {
        parameters: {
            query?: {
                asin?: string;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        [key: string]: unknown;
                    };
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    keepa_health_check_api_v1_keepa_health_get: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        [key: string]: unknown;
                    };
                };
            };
        };
    };
    test_keepa_connection_api_v1_keepa_test_get: {
        parameters: {
            query: {
                /** @description ASIN or ISBN to test with Keepa API */
                identifier: string;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        [key: string]: unknown;
                    };
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_effective_config_api_v1_config__get: {
        parameters: {
            query?: {
                /** @description Keepa domain ID (1=US, 2=UK, etc.) */
                domain_id?: number;
                /** @description Product category for config context */
                category?: string;
                /** @description Force refresh from database */
                force_refresh?: boolean;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["BusinessConfigResponse"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    update_config_api_v1_config__put: {
        parameters: {
            query?: {
                /** @description Configuration scope to update */
                scope?: string;
                /** @description User making the change */
                changed_by?: string;
            };
            header?: {
                /** @description Expected version for optimistic locking */
                "if-match"?: string | null;
            };
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["ConfigUpdateRequest"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["BusinessConfigResponse"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    preview_config_api_v1_config_preview_post: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["ConfigPreviewRequest"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ConfigPreviewResponse"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_config_changes_api_v1_config_changes_get: {
        parameters: {
            query?: {
                /** @description Filter by configuration scope */
                scope?: string | null;
                /** @description Filter by user who made changes */
                changed_by?: string | null;
                /** @description Maximum number of changes to return */
                limit?: number;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ConfigChangeResponse"][];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_config_stats_api_v1_config_stats_get: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ConfigStatsResponse"];
                };
            };
        };
    };
    config_service_health_api_v1_config_health_get: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
        };
    };
    run_custom_search_api_v1_autosourcing_run_custom_post: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["RunCustomSearchRequest"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["AutoSourcingJobResponse"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_latest_results_api_v1_autosourcing_latest_get: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["AutoSourcingJobResponse"] | null;
                };
            };
        };
    };
    get_opportunity_of_day_api_v1_autosourcing_opportunity_of_day_get: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["OpportunityOfDayResponse"] | null;
                };
            };
        };
    };
    get_recent_jobs_api_v1_autosourcing_jobs_get: {
        parameters: {
            query?: {
                /** @description Number of jobs to return */
                limit?: number;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["AutoSourcingJobResponse"][];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_job_details_api_v1_autosourcing_jobs__job_id__get: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                job_id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["AutoSourcingJobResponse"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_saved_profiles_api_v1_autosourcing_profiles_get: {
        parameters: {
            query?: {
                /** @description Return only active profiles */
                active_only?: boolean;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["SavedProfileResponse"][];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    create_profile_api_v1_autosourcing_profiles_post: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["CreateProfileRequest"];
            };
        };
        responses: {
            /** @description Successful Response */
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["SavedProfileResponse"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    update_pick_action_api_v1_autosourcing_picks__pick_id__action_put: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                pick_id: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["UpdateActionRequest"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["AutoSourcingPickResponse"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_picks_by_action_api_v1_autosourcing_my_actions__action__get: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                action: components["schemas"]["ActionStatus"];
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["AutoSourcingPickResponse"][];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_to_buy_list_api_v1_autosourcing_to_buy_get: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["AutoSourcingPickResponse"][];
                };
            };
        };
    };
    get_favorites_api_v1_autosourcing_favorites_get: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["AutoSourcingPickResponse"][];
                };
            };
        };
    };
    get_action_stats_api_v1_autosourcing_stats_get: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
        };
    };
    get_job_products_by_tier_api_v1_autosourcing_jobs__job_id__tiers_get: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                job_id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    autosourcing_health_api_v1_autosourcing_health_get: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
        };
    };
    get_autoscheduler_status_api_v1_autoscheduler_status_get: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["AutoSchedulerStatus"];
                };
            };
        };
    };
    enable_autoscheduler_api_v1_autoscheduler_enable_post: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
        };
    };
    disable_autoscheduler_api_v1_autoscheduler_disable_post: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
        };
    };
    pause_autoscheduler_api_v1_autoscheduler_pause_post: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["PauseRequest"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    pause_autoscheduler_today_api_v1_autoscheduler_pause_today_post: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
        };
    };
    update_schedule_api_v1_autoscheduler_schedule_put: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["ScheduleUpdateRequest"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_autoscheduler_metrics_api_v1_autoscheduler_metrics_get: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
        };
    };
    autoscheduler_health_api_v1_autoscheduler_health_get: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
        };
    };
    get_stock_estimate_api_v1_products__asin__stock_estimate_get: {
        parameters: {
            query?: {
                /** @description Target price for filtering relevant offers */
                price_target?: number | null;
            };
            header?: never;
            path: {
                asin: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    stock_estimate_health_api_v1_products_stock_estimate_health_get: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
        };
    };
    get_strategic_view_api_v1_views__view_type__get: {
        parameters: {
            query: {
                /** @description Comma-separated list of ASINs to analyze */
                asins: string;
                /** @description Max results to return */
                limit?: number;
                /** @description Minimum ROI filter */
                min_roi?: number;
                /** @description Minimum monthly sales filter */
                min_sales?: number;
                /** @description Comma-separated velocity tiers to include */
                velocity_tiers?: string | null;
            };
            header?: never;
            path: {
                view_type: components["schemas"]["ViewType"];
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    list_available_views_api_v1_views__get: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
        };
    };
    get_strategic_view_with_target_prices_api_v1_views__view_type__target_prices_get: {
        parameters: {
            query: {
                /** @description Comma-separated list of ASINs to analyze */
                asins: string;
                /** @description Max results to return */
                limit?: number;
                /** @description Include detailed calculation breakdown */
                include_calculation_details?: boolean;
            };
            header?: never;
            path: {
                view_type: components["schemas"]["ViewType"];
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["StrategicViewResponseSchema"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    analyze_niches_api_niche_discovery_analyze_post: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["NicheAnalysisRequest"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["NicheAnalysisResponse"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_available_categories_api_niche_discovery_categories_get: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["CategoriesListResponse"];
                };
            };
        };
    };
    export_niches_csv_api_niche_discovery_export_csv_post: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": {
                    [key: string]: unknown;
                }[];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_service_stats_api_niche_discovery_stats_get: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
        };
    };
    list_saved_niches_api_bookmarks_niches_get: {
        parameters: {
            query?: {
                /** @description Number of records to skip */
                skip?: number;
                /** @description Maximum number of records to return */
                limit?: number;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["NicheListResponseSchema"];
                };
            };
            /** @description Not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    create_saved_niche_api_bookmarks_niches_post: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["NicheCreateSchema"];
            };
        };
        responses: {
            /** @description Successful Response */
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["NicheReadSchema"];
                };
            };
            /** @description Not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_saved_niche_api_bookmarks_niches__niche_id__get: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                niche_id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["NicheReadSchema"];
                };
            };
            /** @description Not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    update_saved_niche_api_bookmarks_niches__niche_id__put: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                niche_id: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["NicheUpdateSchema"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["NicheReadSchema"];
                };
            };
            /** @description Not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    delete_saved_niche_api_bookmarks_niches__niche_id__delete: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                niche_id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            204: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_niche_analysis_filters_api_bookmarks_niches__niche_id__filters_get: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                niche_id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
            /** @description Not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
}
